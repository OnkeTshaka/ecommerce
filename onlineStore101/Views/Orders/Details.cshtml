@using onlineStore101.Models;
@model  onlineStore101.Models.Order

@{
    ViewBag.Title = "Details";
}
<div id="message" class="mt-4">@TempData["message"]</div>

<div class="container" style="margin-top:20px;margin-left:230px;color:#111;">
    <div class="col-md-9">

        <div class="thumbnail">

            <div style="float:left;font-size:20px;">Order Number:  @Html.DisplayFor(model => model.OrderID)</div>
            <div style="float:right;font-size:20px;">Reference Code:  @Html.DisplayFor(model => model.Refcode)</div>
            <div class="tooltip">
                <button onclick="myFunction()" onmouseout="outFunc()">
                    <span class="tooltiptext" id="myTooltip">Copy to clipboard</span>
                    Copy text
                </button>
            </div><br />
            <hr />
            <div class="caption-full">
                <p>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.Label("Date")
                        </dt>
                        <dd>
                            @String.Format("{0:MM/dd/yyyy}", Model.OrderDate)
                        </dd>
                        <dt>
                            @Html.Label("Name")
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CustomerName)
                        </dd>
                        <dt>
                            @Html.Label("Phone")
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CustomerPhone)
                        </dd>
                        <dt>
                            @Html.Label("Email")
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CustomerEmail)
                        </dd>
                        <dt>
                            @Html.Label("Address")
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.CustomerAddress)
                        </dd>
                        @*<dt>
                            @Html.Label("Payment Type")
                        </dt>*@
                        @*<dd>
                            @Html.DisplayFor(model => model.PaymentType)
                        </dd>
                        <dt>
                            @Html.Label("Status")
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Status)
                        </dd>*@
                    </dl>
                </p>
                <hr />
                <h3>Purchased Items</h3>
                <table class="table-bordered ">
                    <tr style="padding:5px;text-align:center;">
                        <th></th>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Category</th>
                        <th>Product Price</th>
                    </tr>
                    @{
                        int Total = 0;

                    }

                    @foreach (var item in Model.OrderDetails)
                    {
                        int lineTotal = Convert.ToInt32(item.Quantity * item.Product.Price);
                        Total = Convert.ToInt32(@Total + lineTotal);
                        Session["SesTotal"] = Total;
                        <tr>
                            <td>
                                <img src="data:image/png;base64,@Convert.ToBase64String(item.Product.Picture, 0, item.Product.Picture.Length)" class="img-responsive img-thumbnail" style="width: 50px; height: 50px;" alt="" />
                            </td>
                            <td>@item.Product.Title</td>
                            <td>@item.Quantity</td>
                            <td>@(" R" +item.Product.Price)</td>
                            <td>@item.Product.Category.Name</td>
                            <td>@(" R"+lineTotal)</td>
                            <td></td>
                        </tr>
                    }
                <tr>
                    <td colspan="6" class="text-right" height="">
                        <span class="label label-danger" style="font-size:15px;">Order Total:@(" R"+Total)</span>
                    </td>
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="container" style="margin-top:20px;">
                            <a type="button" class="btn btn-default btn-lg pull-right" href="@Url.Action("Create", "DeliveryTimes", routeValues:new { id=Model.OrderID})" style="margin-right:5px;">Assign To Driver</a>
                        </div>

                    }

                </tr>
                </table>
            </div>
        </div>
        @if (User.IsInRole("Member"))
        {
            <div>

                @{
                    string url = "https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_xclick&amount=" + ((@Total) / 16.43) + "&business=Shakampechuar@gmail.com&item_name=Payments&return=https://2020grp27.azurewebsites.net/Orders/OrderComplete";

                }
                <a href="@url" class="btn btn-success">Pay Using PayPal</a>



                @Html.Partial("_OrderControl")
            </div>
                    }
        </div>
                    
</div>
@if (User.IsInRole("Driver"))
{
    <div class="row jumbotron" style="color:#111">
        <div class="col-md-12">
            <h2 class="text-center" style="font-weight:900">Get Directions</h2>
            <a href="@Url.Action("Index", "DeliveryTimes")" class="btn btn-warning pull-right" style="margin-left:0;">
               Back To Delivery
            </a>
            <div>
                <form>
                    <div class="form-group">
                        <label>Travel From :</label>
                        <input id="travelfrom" type="text" name="name" value="@Model.From" class="form-control" disabled="disabled" />
                    </div>
                    <div class="form-group">
                        <label>To :</label>
                        <input id="travelto" type="text" name="name" value="@Model.CustomerAddress" class="form-control"disabled="disabled" />
                    </div>
                    <input type="button" value="Get Route" onclick="GetRoute()" id="btnSave" style="color:#111;" />

                </form>
                <br />
                <div>
                    <div id="dvDistance" style="font-size:30px;">
                    </div>
                </div>

            </div>

            <div id="dvMap" style="min-height:500px"></div>

        </div>
    </div>
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <!--ENSURE YOU CHANGE TO YOUR OWN API KEY HERE !!! -->
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyDinWPcxH7MB6uiKDMD8h1mmVk3CNVU9vw" type="text/javascript"></script>

    <!-- code for example 1 -->
    <script>

        var source, destination;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();

        // initialise the location of the map on Chichester in England (ref lat and lng)
        var map = new google.maps.Map(document.getElementById('dvMap'), {
            center: { lat: -29.856349, lng: 31.003004 },
            zoom: 13,
            mapTypeId: 'roadmap'
        });

        google.maps.event.addDomListener(window, 'load', function () {
            new google.maps.places.SearchBox(document.getElementById('travelfrom'));
            new google.maps.places.SearchBox(document.getElementById('travelto'));
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
        });

        function GetRoute() {

            directionsDisplay.setMap(map);

            source = document.getElementById("travelfrom").value;
            destination = document.getElementById("travelto").value;

            var request = {
                origin: source,
                destination: destination,
                travelMode: google.maps.TravelMode.DRIVING
            };

            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                }
            });

            //*********DISTANCE AND DURATION**********************//
            var service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix({
                origins: [source],
                destinations: [destination],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, function (response, status) {

                if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                    var distance = response.rows[0].elements[0].distance.text;
                    var duration = response.rows[0].elements[0].duration.value;
                    var dvDistance = document.getElementById("dvDistance");
                    duration = parseFloat(duration / 60).toFixed(2);
                    dvDistance.innerHTML = "";
                    dvDistance.innerHTML += "Distance: " + distance + "<br />";
                    dvDistance.innerHTML += "Time:" + duration + " min";

                } else {
                    alert("Unable to find the distance via road.");
                }
            });
        }

    </script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            if ($("#message").html() != '') {
                $("#message").addClass("alert alert-danger text-center").show();

                setTimeout(function () {

                    $("#message").fadeOut("normal", function () {
                        $(this).remove();
                    });

                }, 2000);
            }
        });

    </script>
}